{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Client: dev",
            "type": "npm",
            "script": "dev",
            "path": "client/",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Run the client development server (Vite)"
        },
        {
            "label": "Client: build",
            "type": "npm",
            "script": "build",
            "path": "client/",
            "problemMatcher": [],
            "group": "build",
            "detail": "Build the client application for production"
        },
        {
            "label": "Server: build",
            "type": "shell",
            "command": "unset ARGV0 && cargo build",
            "options": {
                "cwd": "${workspaceFolder}/server"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "group": "build",
            "detail": "Build the Rust server module"
        },
        {
            "label": "Server: start",
            "type": "shell",
            "command": "unset ARGV0 && unset APPIMAGE && /home/ksollner/.local/bin/spacetime start",
            "problemMatcher": [],
            "detail": "Start the SpacetimeDB server (May fail, see README)"
        },
        {
            "label": "Server: publish",
            "type": "shell",
            "command": "unset ARGV0 && unset APPIMAGE && /home/ksollner/.local/bin/spacetime publish --project-path . spacetime",
            "options": {
                "cwd": "${workspaceFolder}/server"
            },
            "problemMatcher": [],
            "detail": "Publish the Rust module to the SpacetimeDB server"
        },
        {
            "label": "Server: generate bindings",
            "type": "shell",
            "command": "unset ARGV0 && unset APPIMAGE && /home/ksollner/.local/bin/spacetime generate --lang typescript --out-dir client/src/module_bindings --project-path server",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "group": "build",
            "detail": "Generate TypeScript client bindings from the server schema"
        }
    ]
}